ggplot() + aes(means)+ geom_histogram(binwidth=1, colour="black", fill="white")
ggplot() + aes(means)+ geom_histogram(binwidth=100, colour="black", fill="white")
ggplot() + aes(means)+ geom_histogram(colour="black", fill="white")
ggplot() + aes(means)+ geom_histogram(binwidth=10, colour="black", fill="white")
ggplot() + aes(means)+ geom_histogram(bins=100, colour="black", fill="white")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="white")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="blue")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="green")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="lightbrown")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="lightbrown") + geom_abline(5)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_abline(5)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="lightbrown") + geom_abline(aes(5)
)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="lightbrown") + geom_abline(intercept = 5)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_abline(intercept = 5)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5) + geom_vline(xintercept = 4.994883)
ggplot() + aes(means)+ geom_histogram(bins=40, colour="black", fill="yellow") + geom_vline(xintercept = 5) + geom_vline(xintercept = 4.994883)
ggplot() + aes(means)+ geom_histogram(bins=30, colour="black", fill="yellow") + geom_vline(xintercept = 5) + geom_vline(xintercept = 4.994883)
ggplot() + aes(means)+ geom_histogram(bins=100, colour="black", fill="yellow") + geom_vline(xintercept = 5) + geom_vline(xintercept = 4.994883)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5) + geom_vline(xintercept = 4.994883)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green", width = 2)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green", size = 2)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green", size = 1)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red", size = 1) + geom_vline(xintercept = 4.994883, colour = "green", size = 1)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + geom_text("fffff")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + geom_text(aes("fffff")
)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution") + xlab("Means") + ylab("Frequency")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution") + xlab("Means") + ylab("Frequency") + scale_colour_manual(name="Error Bars",values=c(5, 4.9), guide = guide_legend(fill = NULL,colour = NULL))
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution") + xlab("Means") + ylab("Frequency") + scale_colour_manual(name="Error Bars",values=c(5, 4.9), guide = guide_legend(fill = NULL,colour = "green"))
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution") + xlab("Means") + ylab("Frequency") + scale_colour_manual(name="Error Bars",values=c(5, 4.9), guide = guide_legend(fill = NULL,colour = "green")) + scale_fill_manual(name="Bar",values=c(5, 4.9), guide="none") +
)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution") + xlab("Means") + ylab("Frequency") + scale_colour_manual(name="Error Bars",values=c(5, 4.9), guide = guide_legend(fill = NULL,colour = "green")) + scale_fill_manual(name="Bar",values=c(5, 4.9), guide="none")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution") + xlab("Means") + ylab("Frequency") + scale_colour_manual(name="Error Bars",values=c(5, 4.9), guide = guide_legend(fill = NULL,colour = "green")) + scale_fill_manual(name="Bar",values=5, guide="none")
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution") + xlab("Means") + ylab("Frequency") + scale_colour_manual(name="Error Bars",values=c(5, 4.9), guide = guide_legend(fill = NULL,colour = "green")) + scale_fill_manual(name="Bar",values=5)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution") + xlab("Means") + ylab("Frequency") + scale_colour_manual(name="Error Bars",values=c(5, 4.9), guide = guide_legend(colour = "green")) + scale_fill_manual(name="Bar",values=5)
ggplot() + aes(means)+ geom_histogram(bins=50, colour="black", fill="yellow") + geom_vline(xintercept = 5, colour = "red") + geom_vline(xintercept = 4.994883, colour = "green") + ggtitle("Distribution of 1000 means of exponential distribution") + xlab("Means") + ylab("Frequency") + scale_fill_manual(name="Bar",values=5)
ggplot() +
aes(means) +
geom_histogram(bins=50, colour="black", fill="yellow") +
geom_vline(xintercept = 5, colour = "red") +
geom_vline(xintercept = 4.994883, colour = "green") +
ggtitle("Distribution of 1000 means of exponential distribution") +
xlab("Means") +
ylab("Frequency")
variance <- var(means)
variance
theoretical_variance <- ((1/lambda)^2)/n
theoretical_variance
df <- data.frame(mns)
ggplot(df,aes(x = means)) +
geom_histogram(aes(y=..density..), colour="black",fill="yellow") +
labs(title="Distribution of Means of exponential distribution", y="Frequency") +
stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(theoretical_variance)), color = "red", size = 1.0)
stat_function(fun=dnorm,args=list( mean=mean(means), sd=sqrt(varmean)),color = "green", size = 1.0)
df <- data.frame(mns)
ggplot(df,aes(x = means)) +
geom_histogram(aes(y=..density..), colour="black",fill="yellow") +
labs(title="Distribution of Means of exponential distribution", y="Frequency") +
stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(theoretical_variance)), color = "red", size = 1.0)
stat_function(fun=dnorm,args=list( mean=mean(means), sd=sqrt(variance)), color = "green", size = 1.0)
df <- data.frame(mns)
ggplot(df,aes(x = means)) +
geom_histogram(aes(y=..density..), colour="black",fill="yellow") +
labs(title="Distribution of Means of exponential distribution", y="Frequency") +
stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(theoretical_variance)), color = "red", size = 1.0) +
stat_function(fun=dnorm,args=list( mean=mean(means), sd=sqrt(variance)), color = "green", size = 1.0)
df <- data.frame(means)
ggplot(df,aes(x = df)) +
geom_histogram(aes(y=..density..), colour="black",fill="yellow") +
labs(title="Distribution of Means of exponential distribution", y="Frequency") +
stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(theoretical_variance)), color = "red", size = 1.0) +
stat_function(fun=dnorm,args=list( mean=mean(means), sd=sqrt(variance)), color = "green", size = 1.0)
View(df)
df <- data.frame(means)
ggplot(df,aes(x = means)) +
geom_histogram(aes(y=..density..), colour="black",fill="yellow") +
labs(title="Distribution of Means of exponential distribution", y="Frequency") +
stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(theoretical_variance)), color = "red", size = 1.0) +
stat_function(fun=dnorm,args=list( mean=mean(means), sd=sqrt(variance)), color = "green", size = 1.0)
df <- data.frame(means)
ggplot(df,aes(x = means)) +
geom_histogram(bins=50, colour="black",fill="yellow") +
labs(title="Distribution of Means of exponential distribution", y="Frequency") +
stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(theoretical_variance)), color = "red", size = 1.0) +
stat_function(fun=dnorm,args=list( mean=mean(means), sd=sqrt(variance)), color = "green", size = 1.0)
df <- data.frame(means)
ggplot(df,aes(x = means)) +
geom_histogram(aes(y=..density..), bins=50, colour="black",fill="yellow") +
labs(title="Distribution of Means of exponential distribution", y="Frequency") +
stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(theoretical_variance)), color = "red", size = 1.0) +
stat_function(fun=dnorm,args=list( mean=mean(means), sd=sqrt(variance)), color = "green", size = 1.0)
df <- data.frame(means)
ggplot(df,aes(x = means)) +
geom_histogram(aes(y=..Frequency..), bins=50, colour="black",fill="yellow") +
labs(title="Distribution of Means of exponential distribution", y="Frequency") +
stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(theoretical_variance)), color = "red", size = 1.0) +
stat_function(fun=dnorm,args=list( mean=mean(means), sd=sqrt(variance)), color = "green", size = 1.0)
df <- data.frame(means)
ggplot(df,aes(x = means)) +
geom_histogram(aes(y=..density..), bins=50, colour="black",fill="yellow") +
labs(title="Distribution of Means of exponential distribution", y="Frequency") +
stat_function(fun=dnorm,args=list( mean=1/lambda, sd=sqrt(theoretical_variance)), color = "red", size = 1.0) +
stat_function(fun=dnorm,args=list( mean=mean(means), sd=sqrt(variance)), color = "green", size = 1.0)
qqnorm(means,
main ="Normal Q-Q Plot")
qqline(sim$Mean,
col = "3")
qqnorm(means,
main ="Normal Q-Q Plot")
qqline(means, col = "3")
qqnorm(means, main ="Q-Q Plot")
qqline(means, col = "3")
library(datasets)
data(ToothGrowth)
dim(ToothGrowth)
str(ToothGrowth)
sum(is.na(ToothGrowth))
head(ToothGrowth)
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose)))
geom_boxplot(notch=F) + facet_grid(.~supp) +
xlab("Dosage (mg)") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by dosage")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose)))
geom_boxplot(notch=F) + facet_grid(.~supp)
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose)))
geom_boxplot(notch=F) +
facet_grid(.~supp) +
xlab("Dosage (mg)") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by dosage")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose)))
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage (mg)") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by dosage")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose))) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage (mg)") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by dosage")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose))) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage (mg)") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose))) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=dose, y=len, fill=dose)) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=dose)) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose))) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len)) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len)) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len), color=c("green", "yellow", "blue")) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len), fill=c("green", "yellow", "blue")) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len), fill=fator(dose)) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=fator(dose))) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose))) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, color=factor(dose))) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=c("yellow", "green", "bleu"))) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose))) +
geom_boxplot() +
facet_grid(.~supp) +
xlab("Dosage") +
ylab("Teeth Growth") +
ggtitle("Teeth Growth by supplement type")
dose_05 <-subset(ToothGrowth, dose==0.5)
dose_1 <-subset(ToothGrowth, dose==1.0)
dose_2 <-subset(ToothGrowth, dose==2.0)
t.test(len~supp, data=dose_05, paired=FALSE)
t.test(len~supp, data=dose_1, paired=FALSE)
t.test(len~supp, data=dose_2, paired=FALSE)
t.test(len ~ supp, paired = F, var.equal = F, data = ToothGrowth)
dose_05 <-subset(ToothGrowth, dose %in% c(0.5, 1.0))
dose_1 <-subset(ToothGrowth, dose %in% c(0.5, 2.0))
dose_2 <-subset(ToothGrowth, dose %in% c(1.0, 2.0))
t.test(len~supp, data=dose_05, paired=FALSE)
t.test(len~supp, data=dose_1, paired=FALSE)
t.test(len~supp, data=dose_2, paired=FALSE)
t.test(len~dose, data=dose_05, paired=FALSE)
dose_05 <-subset(ToothGrowth, dose==0.5)
dose_1 <-subset(ToothGrowth, dose==1.0)
dose_2 <-subset(ToothGrowth, dose==2.0)
t.test(len~dose, data=dose_05, paired=FALSE)
t.test(len~dose, data=dose_05, paired=FALSE)
dose_05 <-subset(ToothGrowth, dose %in% c(0.5, 1.0))
dose_1 <-subset(ToothGrowth, dose==1.0)
dose_2 <-subset(ToothGrowth, dose==2.0)
t.test(len~dose, data=dose_05, paired=FALSE)
dose_05 <-subset(ToothGrowth, dose %in% c(0.5, 1.0))
dose_1 <-subset(ToothGrowth, dose %in% c(0.5, 2.0))
dose_2 <-subset(ToothGrowth, dose %in% c(1.0, 2.0))
t.test(len~dose, data=dose_05, paired=FALSE)
t.test(len~dose, data=dose_1, paired=FALSE)
t.test(len~dose, data=dose_2, paired=FALSE)
install.packages("swirl")
library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
plot(child ~ parent, galton)
lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
fit$coef[1] <- fit$coef[2]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
carChild <- var(galton$child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes)
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
manipulate(myPlot(beta), beta = slider(0.4, .8, step = 0.02))
cor(gpa_nor, gch_nor)
l_nor <- lm(child ~ parent, galton)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w(x - 0.300)^2)
sum(w * (x - 0.300)^2)
sum(w * (x - 1.077)^2)
sum(w * (x - 0.1471)^2)
sum(w * (x - 0.0025)^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
?I
lm(I(y - mean(y))~ I(x - mean(x)) - 1)
data("mtcars")
lm(I(y) ~ I(x) - 1)
lm(mtcars$mpg ~ mtcars$wt)
.5 * sd(10) / sd(5)
sd(10)
sd(1)
sd(.05)
?sd
sd(1:2)
sd(c(10))
sd(c(10,11))
sd(0.5 * c(10,11))
.5 * sd(c(10,20)) / sd(1/2 * c(10/20))
.5 * sd(c(10,20)) / sd(0.5 * c(10/20))
sd(c(10,20)) / sd(0.5 * c(10/20))
.5 * sd(c(10,20)) / sd(0.5 * c(10,20))
1.5 * 0.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x))/sd(x)
xn
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
sum((x - 0.44)^2)
sum((x - 0.573)^2)
sum((x - 0.36)^2)
sum((x - 0.8)^2)
x <- c(2, 0, 1, 1, 1, 1, 1, 1, 1, 0)
y <- c(0, 2, 2, 1, 1, 0, 0, 0, 1, 1)
?sqrt
sqrt(t(x - y) * (x - y))
sqrt(sum(t(x - y) * (x - y)))
sqrt(sum((x - y) ^ 2))
round(sqrt(sum((x - y) ^ 2)), 3)
round(1 - ((t(x) * y) / (sqrt(sum(x^2))) * sqrt(sum(y^2))), 3)
round(1 - (sum(t(x) * y) / (sqrt(sum(x^2))) * sqrt(sum(y^2))), 3)
round(1 - (sum(x * y) / (sqrt(sum(x^2))) * sqrt(sum(y^2))), 3)
?crossprod
crossprod(x, y)/sqrt(crossprod(x) * crossprod(y))
1 - crossprod(x, y)/sqrt(crossprod(x) * crossprod(y))
round(crossprod(x, y)/sqrt(crossprod(x) * crossprod(y)), 3)
round(1 - (sum(x * y) / (sqrt(sum(x^2))) * sqrt(sum(y^2))), 3)
round(1 - (sum(x * y) / (sqrt(sum(x)^2)) * sqrt(sum(y)^2)), 3)
round(1 - (sum(x * y) / ((sqrt(sum(x^2))) * sqrt(sum(y^2)))), 3)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
?lm
fit <- lm(y ~ x
)
summary(fit)$coefficients
resid(fit
)
e <- resid(fit)
yhat <- predict(fit)
max(abs(e -(y - yhat)))
summary(fit)$sigma
data("mtcars")
lm(mtcars$mpg ~ mtcars$wt)
sumCoef <- summary(fit)$coefficients
fit <- lm(mtcars$mpg ~ mtcars$wt)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
?mtcars
predict(fit, data.frame(x = 3000), interval = ("confidence"))
predict(fit, data.frame(wt = 3000), interval = ("confidence"))
predict(fit, data.frame(wt = c(3000), interval = ("confidence"))
)
predict(fit, data.frame(wt = c(3000)), interval = ("confidence"))
predict(fit, data.frame(wt = c(3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000)), interval = ("confidence"))
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
predict(fit, data.frame(wt = c(3000)), interval = ("confidence"))
predict(fit, data.frame(wt = c(3000))
)
fit <- lm(mtcars$mpg ~ mtcars$wt)
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit <- lm(mtcars$mpg ~ I(mtcars$wt / 3000))
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit <- lm(mtcars$mpg ~ I(mtcars$wt * 3000))
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit <- lm(mtcars$mpg ~ I(mtcars$wt * 3))
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit <- lm(mtcars$mpg ~ I(mtcars$wt / 3))
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit <- lm(mtcars$mpg ~ mean(mtcars$wt))
fit <- lm(mtcars$mpg ~ I(mean(mtcars$wt)))
fit <- lm(mtcars$mpg ~ I(mtcars$wt - mean(mtcars$wt)))
sumCoef <- summary(fit)$coefficients
sumCoef
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit <- lm(mpg ~ wt, data = mtcars)
confint(fit)[2, ] * 3
confint(fit)[2, ]
swirl()
library("swirl")
swirl()
fit <- lm(child ~ parent, data = galton)
sqrt(1/(n-2) * sum(fit$residuals^2))
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(sTot)
sRes <- deviance()
1
sRes <- deviance(fit)
sRes/sTot
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$parent,galton$child)^2
data(mtcars)
View(mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
summary(fit)
summary(lm(mpg ~ factor(cyl), data = mtcars))
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
round(hatvalues(fit), 3)
round(hatvalues(fit), 4)
dfbeta(fit)
dfbetas(fit)
summary(lm(mpg ~ factor(cyl) + I(wt), data = mtcars))
summary(lm(mpg ~ factor(cyl), data = mtcars))
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
library(swirl)
swirl()
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays, 15)
sA
summary(InsectSprays[,2])
sapply(InsectSprays, class)
fit <- lm(count ~ spray, data = InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1)
nfit <- lm(count ~ spray - 1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, data = InsectSprays)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3]) / 1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, data = hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, data = hunger[hunger$Sex=="Female"])
lmF <- lm(Numeric ~ Year, data = hunger[hunger$Sex=="Female",])
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric ~ Year + Sex, data = hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- out2[-1, ]
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which=1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <-out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(sum(fit$residuals^2)/resid(fit)$df)
sigma <- sqrt(sum(fit$residuals^2)/fit$df.residual)
rstd <- resid(fit)/sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(sum(fitno$residuals^2)/fitno$df.residual)
resid(fit)[1]/(sigma1 * sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
predict(fitno, out2) - predict(fit, out2)
dy <- predict(fitno, out2)-predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
